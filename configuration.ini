### PSimulator configuration



#######  LFSR ########################################
#
# length of the register, max is 32
maximum_length = 16

# feedback type
# 0 - XOR
# 1 - XNOR
feedback_type = 0

# inital value of register, hexadecimal
seed = ACE1

# positions of feedback bits,
# comma separated, [1-16/32]
feedback_bits = 16,14,13,11

# result output bits, if 0,
# maximum sequence is used
# [1-16/32], 1 - MSB, 16 - LSB
result_bits = 5,9,13

#####################################################


###### Source Signal ################################
#
# source signal periiod, T[Î¼s].
# x(t + T) = x(t)
source_period = 10

#value range, representig Vmax - Vmin
source_value_range = 10
#mean value
source_mean_value = 5

#signal types
# 0 - triangle signal
# 1 - sawtooth signal
# 2 - random with triangle distribution
# 3 - random with uniform distribution
source_signal_type = 0

#####################################################


###### Sampling #####################################
#
# signal period/sampling period ratio
# ratio = T/Ts = sum(n)(An*(1/n^2)), where n is No
# i.e,    if: T/Ts = 8 + 1/2 - 1/4 - 1/32
#       then: the ratio is 8,1,-1,0,-1 polynomial
ratio = 8

#time jitter signal

# to turn of jittering, set period to 0
jitter_period = 0
jitter_modulation_index = 0.005

#signal types
# 0 - triangle signal
# 1 - sawtooth signal
# 2 - random with triangle distribution
# 3 - random with uniform distribution
jitter_type = 2

# sampler interval calulation

# 0 -    t_n = t_n-1 + Ts * (1 + mod_index * jitter(t_n-1))  -  sampling period modulation
# 1 -    t_n = t_n-1 + Ts / ( 1 + mod_index * jitter(t_n-1) ) - sampling frequency modulation
# 2 -    t_n = t_n-1 + 1 / ( (1/Ts + mod_index * jitter(t_n-1) )
sample_interval_calculation = 2


# values to be logged
# 0 - jitter and value samples with sample times
# 1 - binary value added to option 0
# 2 - only binaries
output_type = 1

# binary code
# 0 - sign (1 for positive, 0 for negative values)
# 1 - binary value (only set if no jitter is defined, ratio is positive integer, and source has no negative values)
binary_code = 1

# number of samples to produce
steps_count = 200000
